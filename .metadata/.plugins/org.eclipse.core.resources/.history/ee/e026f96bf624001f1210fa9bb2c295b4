package arvore;

import dados.Item;


	public class Arvore {
		private NoArv raiz; 
		private int quantNos;
	
		public Arvore() {
			this.quantNos = 0;
			this.raiz = null;
	}
		public boolean eVazia() {
			return (this.raiz == null);
	}
		public NoArv getRaiz() {
			return this.raiz;
		}
		public int getQuantNos() {
			return this.quantNos;
		}
		
		public boolean inserir(Item elem) {
			if (pesquisar(elem.getChave())) {
				return false;
			}else {
				this.raiz = inserir (elem, this.raiz);
				this.quantNos++;
				return true;
			}
		}
		
		public NoArv inserir (Item elem, NoArv no) {
			if(no == null) {
				NoArv novo = new NoArv(elem);
				return novo;
			}else {
				if(elem.getChave() < no.getInfo().getChave()) {
					no.setEsq(inserir (elem, no.getEsq()));
					return no;
				}else {
					no.setDir(inserir (elem,(no.getDir()));
					return no;
				}
			}
		}
		
		public boolean pesquisar (int chave) {
			if(pesquisar (chave, this.raiz)!= null) {
				return true;
			}else {
				return false;
			}
		}
		
		private NoArv pesquisar(int chave, NoArv no) {
			if(no != null) {
				if(chave < no.getInfo().getChave()) {
					no = pesquisar(chave, no.getEsq());
				}else {
					if(chave > no.getInfo().getChave()) {
						no = pesquisar(chave, no.getDir());
					}
				}
			}
			return no;
		}
		public boolean remover (int chave) {
			if(pesquisar (chave, this.raiz) != null) {
				this.raiz = remover(chave, this.raiz);
				this.quantNos--;
				return true;
			}else {
				return false;
			}
		}
		public NoArv remover(int chave, NoArv arv) {
			if(chave < arv.getInfo().getChave()) {
				arv.setEsq(remover(chave, arv.getEsq()));
			}else {
				if(chave > arv.getInfo().getChave()) {
					arv.setDir(remover(chave, arv.getDir()));
				}else {
					if(arv.getDir()==null){
					return arv.getEsq();
				}else {
					if(arv.getEsq() == null){
						return arv.getDir();
					}else {
						arv.setEsq(Arrumar (arv, arv.getEsq()));
						}
					}
				}
			}
			return arv;
	}	
	}
	
